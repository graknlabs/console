config:
  version-candidate: VERSION

build:
  quality:
    filter:
      owner: graknlabs
      branch: master
    build-analysis:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
           bazel run @graknlabs_dependencies//tool/sonarcloud:code-analysis -- \
           --project-key graknlabs_console --branch=$CIRCLE_BRANCH --commit-id=$CIRCLE_SHA1
  correctness:
    build:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
        bazel build //...
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
    deploy-artifact-snapshot:
      filter:
        owner: graknlabs
        branch: master
      machine: graknlabs-ubuntu-20.04
      type: foreground
      dependencies: [build, test-integration]
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-console-artifact -- snapshot
    deploy-apt-snapshot:
      filter:
        owner: graknlabs
        branch: master
      machine: graknlabs-ubuntu-20.04
      type: foreground
      dependencies: [build, test-integration]
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-apt -- snapshot
    deploy-rpm-snapshot:
      filter:
        owner: graknlabs
        branch: master
      machine: graknlabs-ubuntu-20.04
      type: foreground
      dependencies: [build, test-integration]
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-rpm -- snapshot

release:
  filter:
    owner: graknlabs
    branch: master
  validation:
    validate-dependencies:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //:release-validate-deps  --test_output=streamed
  deployment:
    deploy-artifact:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-console-artifact -- release
    deploy-github:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        pip install certifi
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:create-notes -- console $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1
    deploy-apt:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        cat VERSION
        export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-apt -- release
    deploy-rpm:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-rpm -- snapshot
