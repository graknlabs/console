#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  install-bazel-mac:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-mac.sh
      - run: bash ./install-bazel-mac.sh && rm ./install-bazel-mac.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run:
          command: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>
          no_output_timeout: 1h

jobs:
  build:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run-bazel-rbe:
          command: bazel build //...

  test-integration:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test:grakn-console-it --test_output=errors

  build-analysis:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
            bazel run @graknlabs_build_tools//sonarcloud:code-analysis -- \
            --project-key graknlabs_console --branch=$CIRCLE_BRANCH --commit-id=$CIRCLE_SHA1

  deploy-apt-snapshot:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-apt -- snapshot

  deploy-rpm-snapshot:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: sudo apt-get update && sudo apt-get install rpm
      - run: |
          export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-rpm -- snapshot

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-approval

  release-validate:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          bazel run @graknlabs_build_tools//ci:release-validate-deps -- \
            graknlabs_common graknlabs_graql graknlabs_protocol graknlabs_client_java

  deploy-github:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-notes -- console $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-apt:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: cat VERSION
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-apt -- release

  deploy-rpm:
    machine: true
    working_directory: ~/console
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: sudo apt-get update && sudo apt-get install rpm
      - run: |
          export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-rpm -- release

  sync-dependencies-release:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source console@$(cat VERSION) \
          --targets grakn:master

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/graknlabs/console $CIRCLE_BRANCH

workflows:
  console:
    jobs:
      - build:
          filters:
            branches:
              ignore: console-release-branch
      - test-integration:
          filters:
            branches:
              ignore: console-release-branch
      - build-analysis:
          filters:
            branches:
              only: master
      - deploy-apt-snapshot:
          filters:
            branches:
              only: master
          requires:
            - build
            - build-analysis
            - test-integration
      - deploy-rpm-snapshot:
          filters:
            branches:
              only: master
          requires:
            - build
            - build-analysis
            - test-integration
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - deploy-apt-snapshot
            - deploy-rpm-snapshot

  console-release:
    jobs:
      - release-validate:
          filters:
            branches:
              only: console-release-branch
      - deploy-github:
          filters:
            branches:
              only: console-release-branch
          requires:
            - release-validate
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
          filters:
            branches:
              only: console-release-branch
      - deploy-apt:
          filters:
            branches:
              only: console-release-branch
          requires:
            - deploy-approval
      - deploy-rpm:
          filters:
            branches:
              only: console-release-branch
          requires:
            - deploy-approval
      - sync-dependencies-release:
          filters:
            branches:
              only: console-release-branch
          requires:
            - deploy-apt
            - deploy-rpm
      - release-cleanup:
          filters:
            branches:
              only: console-release-branch
          requires:
            - sync-dependencies-release
